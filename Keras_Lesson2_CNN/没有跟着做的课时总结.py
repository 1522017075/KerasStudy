"""
    43th: 训练一半保存模型
        可以使用回调函数keras.callbacks.ModelCheckpoint('路径', save_weights_only=True)等参数
        训练到一半保存下来当前参数或模型
    44th: 迁移学习
        keras.applications.VGG16(weights='imagenet', include_top = False)
        比如卷积, 可以使用别人预训练好的卷积基, 然后替换成自己的输出函数, 如 VGG 模型架构
    48th: 迁移学习优化
        使用已经调好的卷积基就不需要反向传播去训练他, 但是每次训练的时候, 图片都会重新经过卷积基提取特征造成重复运算
        可以手动写函数, 先使用卷积基提取特征, 然后将提取的特征作为全连接层的输入, 就会快很多
        手动提取特征就是先初始化一个结果矩阵/数组(知道他的输出格式), 然后经过运算, 填充到里面去, 最后将结果矩阵/数组返回
    49th: 迁移学习微调
        微调: 冻结模型库的底部的卷积层(一般是通用特征 比如纹理提取), 共同训练新添加的分类器层和顶部部分卷积层(一般与特定任务相关)
             只有分类器已经训练好了, 才能微调卷积基的顶部卷积层
        步骤: 1.在预训练卷积基上添加自定义层
             2. 冻结卷积基的所有层(卷积基.trainable=False)
             3. 训练添加的分类层
             4. 解冻卷积基的一部分层(卷积基.trainable=True, 然后遍历每一层, 解冻后三层(层.trainable=False)这样子)

"""